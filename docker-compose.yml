version: '3'
services:
  # DB Sources
  db-mysql:
    container_name: db-mysql
    image: mariadb:10.4
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ckan
      MYSQL_PASSWORD: ckan
      MYSQL_DATABASE: ckan
    volumes:
      - source-mysql:/var/lib/mysql
      - ./init_db/mysql:/docker-entrypoint-initdb.d
    ports:
      - "8001:3306"
  db-oracle:
    container_name: db-oracle
# to build this image:
# 1. Clone this repo: https://github.com/oracle/docker-images/
# 2. Inside downloaded repo, go to OracleDatabase/SingleInstance
# 3. Follow the instructions on README.md. Summarizing:
# 3.1 Download version 19.3.0 from 'Oracle Technology Network' link given;
# 3.2 Copy downloaded file to OracleDatabase/SingleInstance/dockerfiles/19.3.0
# 3.3 In OracleDatabase/SingleInstance, ruin the following command: ./buildDockerImage.sh -v 19.3.0 -s
#https://download.oracle.com/otn/linux/oracle19c/190000/LINUX.X64_193000_db_home.zip
    image: oracle/database:19.3.0-se2
    environment:
      ORACLE_SID: ckan
    volumes:
      - source-oracle:/opt/oracle/oradata
      - ./init_db/oracle:/docker-entrypoint-initdb.d/setup
    ports:
      - "8003:1521"
  db-mssql:
    container_name: db-mssql
    build:
      context: ./dockerfiles/mssql
    environment:
      SA_PASSWORD: Ckan1234
      ACCEPT_EULA: Y
    ports:
      - "8004:1433"
    volumes:
      - source-mssql:/var/opt/mssql/data
      - ./init_db/mssql:/docker-entrypoint-initdb.d/
  db-pgsql:
    container_name: db-pgsql
    image: postgres:12.0
    environment:
      POSTGRES_USER: ckan
      POSTGRES_PASSWORD: ckan
      POSTGRES_DB: ckan
    volumes:
      - source-pgsql:/var/lib/postgresql/data
      - ./init_db/pgsql:/docker-entrypoint-initdb.d
    ports:
      - "8002:5432"
  # CKAN containers
  ckan-redis:
    container_name: ckan-redis
    image: redis:latest
  ckan-solr:
    container_name: ckan-solr
    build:
      context: ./dockerfiles/solr
  ckan-server:
    container_name: ckan-server
    build:
      context: ./dockerfiles/ckan
      args:
        - CKAN_SITE_URL=${CKAN_SITE_URL}
    restart: unless-stopped
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
        - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
        - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
        - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
        - CKAN_SOLR_URL=http://ckan-solr:8983/solr/ckan
        - CKAN_REDIS_URL=redis://ckan-redis:6379/1
        - CKAN_DATAPUSHER_URL=http://ckan-datapusher:8800
        - CKAN_SITE_URL=${CKAN_SITE_URL}
        - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
    volumes:
      - ckan-config:/etc/ckan
      - ckan-home:/usr/lib/ckan
      - ckan-storage:/var/lib/ckan
  ckan-datapusher:
    container_name: ckan-datapusher
    image: clementmouchet/datapusher
  db:
    container_name: ckan-db
    build:
      context: dockerfiles/ckandb
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ckan-pgdb:/var/lib/postgresql/data
volumes:
  source-mysql:
  source-oracle:
  source-mssql:
  source-pgsql:
  ckan-config:
  ckan-home:
  ckan-storage:
  ckan-pgdb:
